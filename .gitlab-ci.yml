---

variables:
  SRC_DIR: "srcproject"
  TAR_NAME: "{{APP_NAME}}.tar.gz"
  APP_NAME: symfonyhello
  TARGET_DIR: "ansible"



stages:
  - build
  - test 
  - package
  - deploy 


build_job:
  stage: build
  image:
    name: php:7.4-alpine
    entrypoint: [""]
  script:
    - apk add gettext libintl git
    - cd ${SRC_DIR}
    - touch .env.${ENV} .env.template
    - envsubst < .env.template >> .env
    - envsubst < .env.${ENV} >> .env
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer 
    - cd ..
    - tar czf ansible/${TAR_NAME} ansible/ --exclude='.env.*'  --exclude='.git' --exclude='node_modules' 
  artifacts:
    paths:
      - ansible/${SRC_ARCHIVE_FILE}
    expire_in: 2d


test_job:
  stage: test
  image: kariae/symfony-php:latest
  script:  
    - php $SRC_DIR/bin/phpunit
  

package_job:
  stage: package 
  image: centos:7
  script:
    - tar -czf $SRC_DIR/$TAR_NAME  $SRC --exclude='.env.*'  --exclude='.git'
  artifacts:
    paths:
      - ${TARGET_DIR}/${TAR_NAME}
    expire_in: 2d
  

    
packages_job:
  stage: deploy
  image: ansible/centos7-ansible
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config'
  script:
    - cd ansible
    - ansible-playbook -e tar_file=${TAR_NAME} -e app_name=${APP_NAME} deploy.yml 

